{"version":3,"sources":["variables/colors.ts","layout/Menu.tsx","state/Store.tsx","state/useStore.tsx","layout/User.tsx","layout/Message.tsx","layout/Split.tsx","chat/useChat.tsx","layout/Tab.tsx","App.tsx","index.tsx"],"names":["colors","MenuContainer","styled","div","Menu","defaultContext","state","chatClient","ChatClient","connection","type","secure","setState","store","createContext","Provider","StateProvider","children","useState","value","useStore","useContext","UserContainer","props","color","User","displayName","MessageContainer","Emote","img","Message","replaced","message","renderMessage","buffer","x","messageText","length","c","emotes","emote","startIndex","push","key","alt","code","src","id","endIndex","colorRaw","SplitContainer","Container","MessageScroll","ul","Split","messages","channel","bufferSize","setMessages","handleMessage","useCallback","channelName","newMessages","pop","unshift","useEffect","join","on","removeListener","useChat","map","messageID","TabContainer","Tab","AppContainer","App","connect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.49365bb3.chunk.js","sourcesContent":["export const colors = {\n\tbg: \"#121416\",\n\tbgBright: \"#1C1F22\",\n\tbgDark: \"#090A0B\",\n\ttheme: \"#00CC66\",\n\tthemeBright: \"#00FF80\",\n\ttext: \"#F5F5F5\",\n};","import React from \"react\";\nimport styled from \"styled-components\";\nimport { colors } from \"../variables/colors\";\n\nconst MenuContainer = styled.div`\n    display: flex;\n    width: 100%;\n    height: 2rem;\n    background: ${colors.bgBright}\n`;\n\nexport function Menu(): JSX.Element {\n\treturn <MenuContainer>\n        Settings\n\t</MenuContainer>;\n}","import { ChatClient } from \"dank-twitch-irc\";\nimport React, { createContext, useState } from \"react\";\n\nexport interface State {\n    chatClient: ChatClient,\n}\n\nexport type Action = Record<string, unknown>;\n\nconst defaultContext = {\n\tstate: {\n\t\tchatClient: new ChatClient({\n\t\t\tconnection: {\n\t\t\t\ttype: \"websocket\",\n\t\t\t\tsecure: true,\n\t\t\t}\n\t\t}),\n\t},\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\tsetState: (state: State) => { },\n};\nconst store = createContext(defaultContext);\nconst { Provider } = store;\n\nconst StateProvider = ({ children }: { children: JSX.Element }): JSX.Element => {\n\tconst [state, setState] = useState(defaultContext.state);\n\n\treturn <Provider value={{ state, setState }}>{children}</Provider>;\n};\n\nexport { store, StateProvider };","import { useContext } from \"react\";\nimport { State, store } from \"./Store\";\n\nexport function useStore(): State {\n\tconst {state} = useContext(store);\n\n\treturn state;\n}\n\nexport function useSetStore(): (state: State) => void {\n\tconst {setState} = useContext(store);\n\n\treturn setState;\n}","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst UserContainer = styled.div`\n\tdisplay: inline-block;\n\tcolor: ${props => props.color};\n\tmargin-right: 5px;\n`;\n\nexport function User({ displayName, color }: { displayName: string, color: string }): JSX.Element {\n\n\treturn <UserContainer color={color}>\n\t\t{displayName}:\n\t</UserContainer>;\n}","import { PrivmsgMessage } from \"dank-twitch-irc\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { User } from \"./User\";\n\nconst MessageContainer = styled.div`\n\tmargin: 5px 0;\n\tdisplay: flex;\n\talign-items: center;\n`;\n\nconst Emote = styled.img`\n\tmargin: 3px;\n`;\n\nexport function Message({ message }: { message: PrivmsgMessage }): JSX.Element {\n\n\tconst renderMessage = [];\n\n\tlet replaced;\n\tlet buffer = \"\";\n\n\tfor (let x = 0; x <= message.messageText.length; x++) {\n\t\tconst c = message.messageText[x];\n\n\t\treplaced = false;\n\t\tfor (const emote of message.emotes) {\n\t\t\tif (emote.startIndex === x) {\n\t\t\t\treplaced = true;\n\t\t\t\trenderMessage.push(<Emote\n\t\t\t\t\tkey={x}\n\t\t\t\t\talt={emote.code}\n\t\t\t\t\tsrc={`https://static-cdn.jtvnw.net/emoticons/v1/${emote.id}/1.0`}\n\t\t\t\t/>);\n\t\t\t\tx += emote.endIndex - emote.startIndex - 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!replaced) {\n\t\t\tif (c !== \" \" && x !== message.messageText.length - 1) {\n\t\t\t\tbuffer += c;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\trenderMessage.push(buffer);\n\t\t\tbuffer = \"\";\n\t\t\trenderMessage.push(c);\n\t\t}\n\t}\n\n\treturn <MessageContainer>\n\t\t<User displayName={message.displayName} color={message.colorRaw}/> {renderMessage}\n\t</MessageContainer>;\n}","import { PrivmsgMessage } from \"dank-twitch-irc\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { useChat } from \"../chat/useChat\";\nimport { colors } from \"../variables/colors\";\nimport { Message } from \"./Message\";\n\nconst SplitContainer = styled.div`\n    flex-grow: 1;\n    flex-basis: 0;\n    height: 0;\n    min-height: 0;\n    padding: 5px;\n    display: flex;\n    flex-direction: column;\n`;\n\nconst Container = styled.div`\n\tbackground: ${colors.bg};\n    color: white;\n\tborder: 2px solid ${colors.bgBright};\n\tpadding: 10px;\n    display: flex;\n    flex-direction: column-reverse;\n    height: 100%;\n`;\n\nconst MessageScroll = styled.ul`\n    list-style-type: none;\n    flex-grow: 1;\n\toverflow-y: scroll;\n\tdisplay: flex;\n\tflex-direction: column-reverse;\n`;\n\nexport function Split(props: { channel: string }): JSX.Element {\n\tconst messages = useChat(props.channel);\n\n\treturn <SplitContainer>\n\t\t<Container>\n\t\t\t<MessageScroll>\n\t\t\t\t{messages.map((message: PrivmsgMessage) => <li key={message.messageID}><Message message={message} /></li>)}\n\t\t\t</MessageScroll>\n\t\t</Container>\n\t</SplitContainer>;\n}","import { PrivmsgMessage } from \"dank-twitch-irc\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useStore } from \"../state/useStore\";\n\nexport function useChat(channel: string, bufferSize = 500): Array<PrivmsgMessage> {\n\tconst { chatClient } = useStore();\n\n\tconst [messages, setMessages] = useState<Array<PrivmsgMessage>>([]);\n\n\tconst handleMessage =  useCallback((message: PrivmsgMessage) => {\n\t\tif (message.channelName === channel) {\n\t\t\tconst newMessages = [...messages];\n\t\t\tif ((newMessages.length + 1) === bufferSize) {\n\t\t\t\tnewMessages.pop();\n\t\t\t}\n\t\t\tnewMessages.unshift(message);\n\n\t\t\tsetMessages(newMessages);\n\t\t}\n\t}, [bufferSize, channel, messages]);\n\n\tuseEffect((): () => void => {\n\t\tchatClient.join(channel);\n\t\tchatClient.on(\"PRIVMSG\", handleMessage);\n\n\t\treturn () => chatClient.removeListener(\"PRIVMSG\", handleMessage);\n\t}, [channel, chatClient, bufferSize, handleMessage]);\n\n\treturn messages;\n}","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Split } from \"./Split\";\n\nconst TabContainer = styled.div`\n\tflex-grow: 1;\n    display: flex;\n    flex-direction: column;\n`;\n\nexport function Tab(): JSX.Element {\n\treturn <TabContainer>\n\t\t<Split channel={\"gempir\"} />\n\t</TabContainer>;\n}","import React, { useContext, useEffect } from \"react\";\nimport { Menu } from \"./layout/Menu\";\nimport { Tab } from \"./layout/Tab\";\nimport styled from \"styled-components\";\nimport { store } from \"./state/Store\";\n\nconst AppContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n`;\n\nexport function App(): JSX.Element {\n\tconst {state} = useContext(store);\n\n\tuseEffect(() => {\n\t\tstate.chatClient.connect();\n\t}, [state.chatClient]);\n\n\treturn (\n\t\t<AppContainer>\n\t\t\t<Menu />\n\t\t\t<Tab />\n\t\t</AppContainer>\n\t);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport {App} from \"./App\";\nimport { StateProvider } from \"./state/Store\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<StateProvider>\n\t\t\t<App />\n\t\t</StateProvider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}