{"version":3,"sources":["layout/Menu.tsx","variables/colors.ts","state/Store.tsx","state/useStore.tsx","layout/Split.tsx","chat/useChat.tsx","layout/Tab.tsx","App.tsx","index.tsx"],"names":["MenuContainer","styled","div","Menu","defaultContext","state","chatClient","ChatClient","connection","type","secure","setState","store","createContext","Provider","StateProvider","children","useState","value","useStore","useContext","SplitContainer","ul","Split","props","messages","channel","bufferSize","setMessages","handleMessage","useCallback","message","channelName","newMessages","length","pop","unshift","useEffect","join","on","removeListener","useChat","map","key","messageID","messageText","TabContainer","Tab","AppContainer","App","connect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wnBAIA,IAAMA,EAAgBC,IAAOC,IAAV,ICFR,WDSJ,SAASC,IACf,OAAO,kBAACH,EAAD,iB,qBEHFI,EAAiB,CACtBC,MAAO,CACNC,WAAY,I,OAAIC,YAAW,CAC1BC,WAAY,CACXC,KAAM,YACNC,QAAQ,MAKXC,SAAU,SAACN,MAENO,EAAQC,wBAAcT,GACpBU,EAAaF,EAAbE,SAEFC,EAAgB,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,SAAuD,EACrDC,mBAASb,EAAeC,OAD6B,mBACxEA,EADwE,KACjEM,EADiE,KAG/E,OAAO,kBAACG,EAAD,CAAUI,MAAO,CAAEb,QAAOM,aAAaK,ICxBxC,SAASG,IAGf,OAFgBC,qBAAWR,GAApBP,M,wMCCR,IAAMgB,EAAiBpB,IAAOqB,GAAV,KAQb,SAASC,EAAMC,GACrB,IAAMC,ECVA,SAAiBC,GAA2D,IAA1CC,EAAyC,uDAA5B,IAA4B,EAC1DR,IAAfb,EADyE,EACzEA,WADyE,EAGjDW,mBAAgC,IAHiB,mBAG1EQ,EAH0E,KAGhEG,EAHgE,KAK3EC,EAAiBC,uBAAY,SAACC,GACnC,GAAIA,EAAQC,cAAgBN,EAAS,CACpC,IAAMO,EAAW,YAAOR,GACnBQ,EAAYC,OAAS,IAAOP,GAChCM,EAAYE,MAEbF,EAAYG,QAAQL,GAEpBH,EAAYK,MAEX,CAACN,EAAYD,EAASD,IASzB,OAPAY,qBAAU,WAIT,OAHA/B,EAAWgC,KAAKZ,GAChBpB,EAAWiC,GAAG,UAAWV,GAElB,kBAAMvB,EAAWkC,eAAe,UAAWX,MAChD,CAACH,EAASpB,EAAYqB,EAAYE,IAE9BJ,EDdUgB,CAAQjB,EAAME,SAE/B,OAAO,kBAACL,EAAD,KACLI,EAASiB,KAAI,SAACX,GAAD,OAA6B,wBAAIY,IAAKZ,EAAQa,WAAYb,EAAQc,iB,kHEblF,IAAMC,EAAe7C,IAAOC,IAAV,KAKX,SAAS6C,IACf,OAAO,kBAACD,EAAD,KACN,kBAACvB,EAAD,CAAOG,QAAS,W,4PCJlB,IAAMsB,EAAe/C,IAAOC,IAAV,KAWX,SAAS+C,IAAoB,IAC5B5C,EAASe,qBAAWR,GAApBP,MAMP,OAJAgC,qBAAU,WACThC,EAAMC,WAAW4C,YACf,CAAC7C,EAAMC,aAGT,kBAAC0C,EAAD,KACC,kBAAC7C,EAAD,MACA,kBAAC4C,EAAD,OCtBHI,IAASC,OACR,kBAAC,IAAMC,WAAP,KACC,kBAAC,EAAD,KACC,kBAAC,EAAD,QAGFC,SAASC,eAAe,W","file":"static/js/main.fa91c30c.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { colors } from \"../variables/colors\";\n\nconst MenuContainer = styled.div`\n    display: flex;\n    width: 100%;\n    height: 2rem;\n    background: ${colors.bgBright}\n`;\n\nexport function Menu(): JSX.Element {\n\treturn <MenuContainer>\n        Settings\n\t</MenuContainer>;\n}","export const colors = {\n\tbg: \"#121416\",\n\tbgBright: \"#1C1F22\",\n\tbgDark: \"#090A0B\",\n\ttheme: \"#00CC66\",\n\tthemeBright: \"#00FF80\",\n\ttext: \"#F5F5F5\",\n};","import { ChatClient } from \"dank-twitch-irc\";\nimport React, { createContext, useState } from \"react\";\n\nexport interface State {\n    chatClient: ChatClient,\n}\n\nexport type Action = Record<string, unknown>;\n\nconst defaultContext = {\n\tstate: {\n\t\tchatClient: new ChatClient({\n\t\t\tconnection: {\n\t\t\t\ttype: \"websocket\",\n\t\t\t\tsecure: true,\n\t\t\t}\n\t\t}),\n\t},\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\tsetState: (state: State) => { },\n};\nconst store = createContext(defaultContext);\nconst { Provider } = store;\n\nconst StateProvider = ({ children }: { children: JSX.Element }): JSX.Element => {\n\tconst [state, setState] = useState(defaultContext.state);\n\n\treturn <Provider value={{ state, setState }}>{children}</Provider>;\n};\n\nexport { store, StateProvider };","import { useContext } from \"react\";\nimport { State, store } from \"./Store\";\n\nexport function useStore(): State {\n\tconst {state} = useContext(store);\n\n\treturn state;\n}\n\nexport function useSetStore(): (state: State) => void {\n\tconst {setState} = useContext(store);\n\n\treturn setState;\n}","import { PrivmsgMessage } from \"dank-twitch-irc\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { useChat } from \"../chat/useChat\";\n\nconst SplitContainer = styled.ul`\n    list-style-type: none;\n    display: flex;\n    flex-direction: column-reverse;\n    height: 100%;\n    overflow-y: scroll;\n`;\n\nexport function Split(props: {channel: string}): JSX.Element {\n\tconst messages = useChat(props.channel);\n\n\treturn <SplitContainer>\n\t\t{messages.map((message: PrivmsgMessage) => <li key={message.messageID}>{message.messageText}</li>)}\n\t</SplitContainer>;\n}","import { PrivmsgMessage } from \"dank-twitch-irc\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useStore } from \"../state/useStore\";\n\nexport function useChat(channel: string, bufferSize = 500): Array<PrivmsgMessage> {\n\tconst { chatClient } = useStore();\n\n\tconst [messages, setMessages] = useState<Array<PrivmsgMessage>>([]);\n\n\tconst handleMessage =  useCallback((message: PrivmsgMessage) => {\n\t\tif (message.channelName === channel) {\n\t\t\tconst newMessages = [...messages];\n\t\t\tif ((newMessages.length + 1) === bufferSize) {\n\t\t\t\tnewMessages.pop();\n\t\t\t}\n\t\t\tnewMessages.unshift(message);\n\n\t\t\tsetMessages(newMessages);\n\t\t}\n\t}, [bufferSize, channel, messages]);\n\n\tuseEffect((): () => void => {\n\t\tchatClient.join(channel);\n\t\tchatClient.on(\"PRIVMSG\", handleMessage);\n\n\t\treturn () => chatClient.removeListener(\"PRIVMSG\", handleMessage);\n\t}, [channel, chatClient, bufferSize, handleMessage]);\n\n\treturn messages;\n}","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Split } from \"./Split\";\n\nconst TabContainer = styled.div`\n    display: flex;\n    max-height: 100%;\n`;\n\nexport function Tab(): JSX.Element {\n\treturn <TabContainer>\n\t\t<Split channel={\"xqcow\"} />\n\t</TabContainer>;\n}","import React, { useContext, useEffect } from \"react\";\nimport \"./App.css\";\nimport { Menu } from \"./layout/Menu\";\nimport { Tab } from \"./layout/Tab\";\nimport styled from \"styled-components\";\nimport { store } from \"./state/Store\";\n\nconst AppContainer = styled.div`\n    display: flex;\n    position: relative;\n    flex-direction: column;\n    height: 100%;\n    width: 100%;\n    max-height: 100vh;\n    max-width: 100vw;\n    overflow: hidden;\n`;\n\nexport function App(): JSX.Element {\n\tconst {state} = useContext(store);\n\n\tuseEffect(() => {\n\t\tstate.chatClient.connect();\n\t}, [state.chatClient]);\n\n\treturn (\n\t\t<AppContainer>\n\t\t\t<Menu />\n\t\t\t<Tab />\n\t\t</AppContainer>\n\t);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport {App} from \"./App\";\nimport { StateProvider } from \"./state/Store\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<StateProvider>\n\t\t\t<App />\n\t\t</StateProvider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}